name: CI - Quality Gates & Performance

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

  build-and-analyze:
    name: Build & Bundle Analysis
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Analyze bundle
        run: pnpm analyze
        env:
          ANALYZE: true

      - name: Check bundle size
        run: |
          # Get the main bundle size in bytes
          BUNDLE_SIZE=$(find .next/static/chunks -name "*.js" -exec wc -c {} + | tail -1 | awk '{print $1}')
          BUNDLE_SIZE_KB=$((BUNDLE_SIZE / 1024))
          BUDGET_KB=120

          echo "Bundle size: ${BUNDLE_SIZE_KB}KB"
          echo "Budget: ${BUDGET_KB}KB"

          if [ $BUNDLE_SIZE_KB -gt $BUDGET_KB ]; then
            echo "❌ Bundle size exceeds budget: ${BUNDLE_SIZE_KB}KB > ${BUDGET_KB}KB"
            exit 1
          else
            echo "✅ Bundle size within budget: ${BUNDLE_SIZE_KB}KB <= ${BUDGET_KB}KB"
          fi

  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: build-and-analyze

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Run Lighthouse CI
        run: pnpm lhci
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 30
